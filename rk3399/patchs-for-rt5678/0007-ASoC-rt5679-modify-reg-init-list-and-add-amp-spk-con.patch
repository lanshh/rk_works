From 8d3c7b7558bc1e62bdaba315e0e60de9d51d922d Mon Sep 17 00:00:00 2001
From: lanshh <lsh@rock-chips.com>
Date: Mon, 10 Dec 2018 17:05:30 +0800
Subject: [PATCH] ASoC: rt5679 : modify reg init list and add amp spk control
 io

Signed-off-by: lanshh <lsh@rock-chips.com>
---
 sound/soc/codecs/rt5679.c | 27 +++++++++++++++++++++------
 sound/soc/codecs/rt5679.h |  3 +++
 2 files changed, 24 insertions(+), 6 deletions(-)

diff --git a/sound/soc/codecs/rt5679.c b/sound/soc/codecs/rt5679.c
index ff9948b..5896642 100644
--- a/sound/soc/codecs/rt5679.c
+++ b/sound/soc/codecs/rt5679.c
@@ -71,14 +71,14 @@ static struct reg_default rt5679_init_list[] = {
 	{RT5679_PR_REG_MONO_AMP_BIAS_CTRL	, 0x0a69},
 	{RT5679_MONO_AMP_DC_CAL_CTRL3		, 0x2000},
 	/* MONO fine tune end */
-	{RT5679_MF_PIN_CTRL1			, 0x2009},
+	{RT5679_MF_PIN_CTRL1			, 0x2da9},
+	{RT5679_MF_PIN_CTRL2			, 0x9e01},
 	{RT5679_PR_REG_PLL1_CTRL2		, 0x0044},
 	{RT5679_PR_REG_PLL2_CTRL2		, 0x0044},
 };
 
-static int rt5679_reg_init(struct snd_soc_codec *codec)
+static int rt5679_reg_init(struct rt5679_priv *rt5679)
 {
-	struct rt5679_priv *rt5679 = snd_soc_codec_get_drvdata(codec);
 	int i;
 
 	for (i = 0; i < ARRAY_SIZE(rt5679_init_list); i++)
@@ -7032,7 +7032,7 @@ static int rt5679_set_bias_level(struct snd_soc_codec *codec,
 	default:
 		break;
 	}
-    snd_soc_codec_get_dapm(codec)->bias_level = level;
+	//snd_soc_codec_get_dapm(codec)->bias_level = level;
 	return 0;
 }
 
@@ -7049,8 +7049,6 @@ static int rt5679_probe(struct snd_soc_codec *codec)
 
 	rt5679->codec = codec;
 
-	rt5679_reg_init(codec);
-
 	ret = device_create_file(codec->dev, &dev_attr_codec_reg);
 	if (ret != 0) {
 		dev_err(codec->dev,
@@ -7669,6 +7667,7 @@ static int rt5679_i2c_probe(struct i2c_client *i2c,
 {
 	struct rt5679_platform_data *pdata = dev_get_platdata(&i2c->dev);
 	struct rt5679_priv *rt5679;
+	enum of_gpio_flags flags;
 	int ret;
 
 	rt5679 = devm_kzalloc(&i2c->dev, sizeof(struct rt5679_priv),
@@ -7748,6 +7747,8 @@ static int rt5679_i2c_probe(struct i2c_client *i2c,
 #endif
 	regmap_write(rt5679->regmap_physical, RT5679_RESET, 0x10ec);
 
+	rt5679_reg_init(rt5679);
+
 	/* IN/OUT diff mode*/
 	if (rt5679->pdata.in1_diff)
 		regmap_update_bits(rt5679->regmap, RT5679_BST12_CTRL,
@@ -7805,6 +7806,20 @@ static int rt5679_i2c_probe(struct i2c_client *i2c,
 			return ret;
 		}
 	}
+
+	rt5679->spk_ctl_gpio = of_get_named_gpio_flags(i2c->dev.of_node, "spk-con-gpio", 0, &flags);
+	if (rt5679->spk_ctl_gpio < 0) {
+		dev_info(&i2c->dev, "Can not read property spk_ctl_gpio\n");
+		rt5679->spk_ctl_gpio = -1;
+	} else {
+		rt5679->spk_gpio_level = (flags & OF_GPIO_ACTIVE_LOW) ? 0 : 1;
+		ret = devm_gpio_request_one(&i2c->dev, rt5679->spk_ctl_gpio, GPIOF_DIR_OUT, NULL);
+		if (ret != 0) {
+			dev_err(&i2c->dev, "Failed to request spk_ctl_gpio\n");
+			return ret;
+		}
+		gpio_set_value(rt5679->spk_ctl_gpio, 1);/* default enable SPK AMP*/
+	}
 	dev_info(&i2c->dev, "snd_soc_register_codec\n");
 	return snd_soc_register_codec(&i2c->dev, &soc_codec_dev_rt5679,
 			rt5679_dai, ARRAY_SIZE(rt5679_dai));
diff --git a/sound/soc/codecs/rt5679.h b/sound/soc/codecs/rt5679.h
index c4cd5ff..f23fe84 100644
--- a/sound/soc/codecs/rt5679.h
+++ b/sound/soc/codecs/rt5679.h
@@ -2250,6 +2250,9 @@ struct rt5679_priv {
 	int irq_work_delay_time;
 	struct clk *mclk;
 
+	int spk_ctl_gpio;
+	bool spk_gpio_level;
+
 	unsigned int adb_reg_addr[0x100];
 	unsigned int adb_reg_value[0x100];
 	unsigned short adb_reg_num;
-- 
1.9.1

